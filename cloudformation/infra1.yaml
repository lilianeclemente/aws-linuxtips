Resources:
#Criando o meu VPC 
  NovoVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.100.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Sub  ${AWS::StackName}-VPC

  NovoInternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: NovoVPC

#Atachar VPC no Novo Internet Gateway        
  NovoAttachGateway:      
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref NovoVPC
      InternetGatewayId: !Ref NovoInternetGateway

 #Nova Subnet 
  NovaSubenet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.100.1.0/24
      VpcId: !Ref NovoVPC
      AvailabilityZone: !Select [0, !GetAZs '' ]
      Tags:
      - Key: Name
        Value:  !Sub  ${AWS::StackName}-Publica

 #Nova Subnet
  NovaSubenet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.100.10.0/24
      VpcId: !Ref NovoVPC
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
      - Key: Name
        Value:  !Sub  ${AWS::StackName}-Privada

# Criando Elastic IP para O NAT Gateway
  NatGatewayElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: NovoVPC


# Criando NAT Gateway
  NovoNatGateway:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGatewayElasticIp.AllocationId
      SubnetId: !Ref NovaSubenet1
      Tags: 
      - Key: Name 
        Value: !Join ['', ["NAT-", !Ref "AWS::StackName"]]

# Criando Route Table Privada
  PrivadaRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NovoVPC
      Tags: 
      - Key: Name 
        Value: Privada         

# Criando Route Privada conectando na route table privada e no nat gateway
  PrivadaRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivadaRouteRable
      DestionationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NovoNatGateway  


# Criando Route Table Publica
  PublicaRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NovoVPC
      Tags: 
      - Key: Name 
        Value: Publica         

# Criando Route Publica conectando na route table publica e no internet gateway
  PublicaRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicaRouteRable
      DestionationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NovoInternetGateway 

# Associando a tabela de rotas com a subnet publica
  PublicaRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicaRouteTable
      SubnetId: !Ref NovaSubenet1

# Associando a tabela de rotas com a subnet privada
  PrivadaRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivadaRouteTable
      SubnetId: !Ref NovaSubenet2

# Criando Security Group - Web
  NovoWebSecGroup:
    Type: AWS:EC2::SecurityGroup
    Properties: 
      GroupName: WebServers
      GroupDescription: Sec Group para os Web Servers
      VpcId: !Ref NovaVPC
      SecurityGroupIngress:
        - 
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        -    
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

# Criando Security Group - Database
  NovoDatabaseSecGroup:
    Type: AWS:EC2::SecurityGroup
    Properties: 
      GroupName: Databases
      GroupDescription: Sec Group para os Web Servers
      VpcId: !Ref NovaVPC
      SecurityGroupIngress:
        - 
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        -    
          IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

# Criando volume para as instancias 
  DBVolume:
    Type: AWS::EC2::Volume 
    DeletionPolicy: Snapshot
    Properties:
      AvailabilityZone:  !Select [0, GetAZs '' ]
      Size: 64
      Tags:
        Key: Name
        Value: data-volume
      VolumeType: gp2

# Criando instancia para banco de dados
  NovaDBInstance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs: 
            VolumeSize: 24
            VolumeType: gp2
      InstanceType: t2.nano
      ImageId: ami-0b418580298265d5c
      KeyName: aws-class-2
      Monitoring: true
      SecurityGroupsIds:
        - !Ref NovoDBSecGroup
      SubnetId: !Ref NovaSubenet2
      Tags: 
        Key: Name
        Value: !Sub ${AWS::StackName}-DB         
      Volumes: 
        - 
          Device: "/dev/sdc"
          VolumeId: !Ref DBVolume
  NovoElasticIp:
    Type: AWS::EC2::EIP
    Proprieties:     
      InstanceId: !Ref NovaWEBInstance
      Domain: NovoVPC  

  NovawebInstance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs: 
            VolumeSize: 24
            VolumeType: gp2
      InstanceType: t2.nano
      ImageId: ami-0b418580298265d5c
      KeyName: aws-class-2
      Monitoring: true
      SecurityGroupsIds:
        - !Ref NovoWEBSecGroup
      SubnetId: !Ref NovaSubenet1
      Tags: 
        Key: Name
        Value: !Sub ${AWS::StackName}-DB                    